---
import type { InferGetStaticParamsType } from "astro";
import { sanityClient } from "sanity:client";

import { tagPage, allTagSlugs, type SanityTag, type SanityTagPage } from "@utils/sanity";

import Page from "@layouts/page.astro";
import BlogCard from "@components/blog/card.astro";
import GameCard from "@components/game/card.astro";

export async function getStaticPaths() {
  const tags = (await sanityClient.fetch(allTagSlugs)) || [];

  return tags.map((tag: SanityTag) => ({
    params: { slug: tag.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

const page: SanityTagPage = (await sanityClient.fetch(tagPage, { slug })) || {};

const { title, blogs, games } = page;
---

<Page title={`${title} Games & Posts`} header={title}>
  {
    games && (
      <section class="section__wrapper">
        <h2 class="section__title">{title} Games</h2>
        {games.length > 0 ? (
          <div class="section__grid">
            {games.map((game) => (
              <GameCard {...game} client={sanityClient} />
            ))}
          </div>
        ) : (
          <p>There are no {title} games.</p>
        )}
      </section>
    )
  }

  {
    blogs && (
      <section class="section__wrapper">
        <h2 class="section__title">{title} Games</h2>
        {blogs.length > 0 ? (
          <div class="section__grid">
            {blogs.map((blog) => (
              <BlogCard {...blog} client={sanityClient} />
            ))}
          </div>
        ) : (
          <p>There are no {title} posts.</p>
        )}
      </section>
    )
  }
</Page>
