---
import arrow from "@icons/arrow.svg?raw";

interface Props {
  title: string;
  id: string;
}

const { title, id } = Astro.props;
---

<div class="settings w-full" id={id}>
  <button
    type="button"
    class="media-accordion__button"
    id={`${id}__button`}
    aria-expanded="false"
    aria-controls={`${id}-media__body-inner`}
  >
    <h2>{title}</h2>
    <p class="media-accordion__arrow" id={`${id}__arrow`}>
      <span class="rotate-90">
        <Fragment set:html={arrow} />
      </span>
    </p>
  </button>
  <div class="overflow-hidden settings duration-700" id={`${id}__body`} style="height: 0px;">
    <div
      class="media-accordion__body"
      id={`${id}__body-inner`}
      aria-labelledby={`${id}-media__button`}
    >
      <slot />
    </div>
  </div>
</div>

<script define:vars={{ id }}>
  const parent = document.getElementById(`Press Kit & Media-accordion__body`);
  const parentInner = document.getElementById(`Press Kit & Media-accordion__body-inner`);
  const accordion = document.getElementById(id);
  const button = document.getElementById(`${id}__button`);
  const arrow = document.getElementById(`${id}__arrow`);
  const accBody = document.getElementById(`${id}__body`);
  const bodyInner = document.getElementById(`${id}__body-inner`);

  const setup = () => {
    if (accordion && button && arrow && accBody && bodyInner) {
      button.addEventListener(`click`, (e) => {
        if (!accordion.classList.contains(`active`)) {
          accordion.classList.add(`active`);
          arrow.classList.add(`rotate-180`);
          accBody.style.height = `${bodyInner.offsetHeight}px`;
          parent.style.height = `${parentInner.offsetHeight + bodyInner.offsetHeight}px`;
          button.setAttribute("aria-expanded", "true");
        } else {
          accordion.classList.remove(`active`);
          arrow.classList.remove(`rotate-180`);
          accBody.style.height = `0px`;
          parent.style.height = `${parentInner.offsetHeight}px`;
          button.setAttribute("aria-expanded", "false");
        }
      });
    }
  };

  setup();

  document.addEventListener(`astro:after-swap`, setup);
</script>
